from datetime import timedelta
from airflow import DAG
from airflow.operators.empty import EmptyOperator
from airflow.operators.python import PythonOperator, BranchPythonOperator
from airflow.providers.amazon.aws.operators.emr import EmrAddStepsOperator
from airflow.utils.dates import days_ago
from ..python.utils import build_spark_submit, validate_execution

JOB_NAME = "general_ingestion_template"
MODULE_NAME = ""


dag_id = ""
validation_task_id = ""
get_spark_submit_cmd_task_id = ""
add_steps_task_id = ""
end_task_id = ""
tags = []
description = ""

default_args = {
    "owner": "airflow",
    "depends_on_past": False,
    "start_date": days_ago(1),
    "retry_delay": timedelta(minutes=5),
    "retries": 2,
}


SPARK_STEPS = [
    {
        "Name": "calculate_pi",
        "ActionOnFailure": "CONTINUE",
        "HadoopJarStep": {
            "Jar": "command-runner.jar",
            "Args": ["/usr/lib/spark/bin/run-example", "SparkPi", "10"],
        },
    }
]

with DAG(
    dag_id=dag_id,
    default_args=default_args,
    description=description,
    tags=tags,
    start_date=days_ago(1),
    catchup=False,
    max_active_runs=1,
    concurrency=1,
) as dag:
    """
    Template DAG EMR com uso do framework B3DF
    """

    branch_from_validation = BranchPythonOperator(
        task_id=validation_task_id,
        python_callable=validate_execution,
        provide_context=True,
    )

    get_spark_submit_cmd = PythonOperator(
        task_id=get_spark_submit_cmd_task_id,
        python_callable=build_spark_submit,
        provide_context=True,
    )

    add_steps = EmrAddStepsOperator(
        task_id=add_steps_task_id,
        job_flow_id="{{ task_instance.xcom_pull(dag_id='EMR_BUS_DAG', task_ids='create_cluster')}}",
        steps=get_spark_submit_cmd.output,
        wait_for_completion=True,
        waiter_delay=60,
        waiter_max_attempts=5,
        deferrable=True,
    )

    end = EmptyOperator(task_id=end_task_id)

    branch_from_validation >> [get_spark_submit_cmd, end]
    get_spark_submit_cmd >> add_steps >> end
